// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

// アニメ作品
model Work {
  id              Int                     @id @default(autoincrement())
  episodes        Episode[]
  title           String
  officialSiteUrl String
  twitterId       String
  hashtag         String
  imageUrl        String
  users           SubscribedWorksOnUser[]
}

// アニメの単話
model Episode {
  id                    Int                     @id @default(autoincrement())
  work                  Work                    @relation(fields: [workId], references: [id])
  workId                Int
  programs              Program[]
  title                 String
  count                 Int
  description           String                  @db.Text
  durationMin           Int
  WatchedEpisodesOnUser WatchedEpisodesOnUser[]
}

// テレビのチャンネルまたはネット配信サービス
model Channel {
  id         Int                        @id @default(autoincrement())
  programs   Program[]
  name       String
  isRealtime Boolean
  users      SubscribedChannelsOnUser[]
}

// あるチャンネルである日時に放送された番組
model Program {
  id         Int      @id @default(autoincrement())
  episode    Episode  @relation(fields: [episodeId], references: [id])
  episodeId  Int
  channel    Channel  @relation(fields: [channelId], references: [id])
  channelId  Int
  releasedAt DateTime
}

model User {
  id                 Int                        @id @default(autoincrement())
  uid                String
  subscribedWorks    SubscribedWorksOnUser[]
  subscribedChannels SubscribedChannelsOnUser[]
  watchedEpisodes    WatchedEpisodesOnUser[]
}

model SubscribedWorksOnUser {
  user   User @relation(fields: [userId], references: [id])
  userId Int
  work   Work @relation(fields: [workId], references: [id])
  workId Int

  @@id([userId, workId])
}

model SubscribedChannelsOnUser {
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  channel   Channel @relation(fields: [channelId], references: [id])
  channelId Int

  @@id([userId, channelId])
}

model WatchedEpisodesOnUser {
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  episode   Episode @relation(fields: [episodeId], references: [id])
  episodeId Int

  @@id([userId, episodeId])
}
